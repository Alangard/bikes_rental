services:
  api:
      build: .
      container_name: DjangoAPI
      command: >
        bash -c "python manage.py collectstatic --no-input &&
        python manage.py makemigrations --no-input&&
        python manage.py migrate --no-input &&
        gunicorn --bind 0.0.0.0:8000 config.wsgi:application --timeout 200 --workers=5"
      ports:
        - 8000:8000
      # - 587:587
      restart: always
      depends_on:
        - db
      volumes:
        - .:/code
        - static_volume:/code/static/
      env_file:
        - ./.env/.env.test
      networks:
        api_network:

  # PostgreSQL Database Service
  db:
    container_name: PostgreSQL
    image: postgres:16.2-alpine
    expose:
      - 5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env/.env.test
    networks:
      api_network:


# Celery Service
  celery:
    build: .
    container_name: Celery
    command: celery -A config worker --loglevel=info
    volumes:
        - .:/code
    env_file:
      - ./.env/.env.test
    depends_on:
        - api
        - redis
    networks:
      api_network:

  #Redis Service
  redis:
    container_name: Redis
    image: "redis:7.2-alpine"
    networks:
      api_network:

  
volumes:
  # will be used to store our ssl certificate and make it persistent as wel   
  postgres_data:
  static_volume:
    
networks:
  api_network: